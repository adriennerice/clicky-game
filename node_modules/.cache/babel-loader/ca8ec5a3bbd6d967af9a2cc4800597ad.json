{"ast":null,"code":"import _toConsumableArray from \"/Users/adriennerice/Bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/adriennerice/Bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adriennerice/Bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adriennerice/Bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adriennerice/Bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adriennerice/Bootcamp/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adriennerice/Bootcamp/clicky-game/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport MemoryCard from \"./components/MemoryCard\";\nimport friends from \"./friends.json\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      score: 0,\n      topScore: 0,\n      message: 'Click an image to begin!',\n      clickedList: []\n    };\n\n    _this.handleClick = function (id) {\n      var clickedList = _this.state.selectedCards; // Can use indexOf()\n      // Returns true or false if included\n\n      var isClicked = clickedList.includes(id);\n\n      if (isClicked) {\n        alert('clicked already');\n      } else {\n        alert('Not clicked');\n\n        _this.setState({\n          clickedList: [].concat(_toConsumableArray(clickedList), [id])\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"shuffleCards\",\n    // 1) When card clicked check if unique id is in selectedCards \n    // - if in array then game over\n    //    - check if current score is greater than topScore\n    //         - if greater save score as current topScore\n    //    - display game over to screen\n    //    - startNewGame()\n    //       - reset score to zero\n    //       - shuffle cards - random array\n    //       - render to page\n    // 2) if not in array\n    //    - Check if wonGame()\n    //    - increase score counter by 1\n    //    - add id to selectedCards\n    //    - shuffle cards - random array\n    //    - render to page\n    // When card is clicked onClick=\"shuffleCards\" \n    value: function shuffleCards() {}\n  }, {\n    key: \"startNewGame\",\n    value: function startNewGame() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.friends.map(function (friend) {\n        return React.createElement(MemoryCard, {\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          handleClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/adriennerice/Bootcamp/clicky-game/clicky-game/src/App.js"],"names":["React","Component","NavBar","Header","Main","Footer","MemoryCard","friends","App","state","score","topScore","message","clickedList","handleClick","id","selectedCards","isClicked","includes","alert","setState","map","friend","name","image"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAGA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UAGLC,K,GAAQ;AACLF,MAAAA,OAAO,EAAPA,OADK;AAELG,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,QAAQ,EAAE,CAHL;AAILC,MAAAA,OAAO,EAAE,0BAJJ;AAKLC,MAAAA,WAAW,EAAE;AALR,K;;UAkCPC,W,GAAc,UAACC,EAAD,EAAQ;AACpB,UAAMF,WAAW,GAAG,MAAKJ,KAAL,CAAWO,aAA/B,CADoB,CAGpB;AACA;;AACA,UAAMC,SAAS,GAAGJ,WAAW,CAACK,QAAZ,CAAqBH,EAArB,CAAlB;;AAEA,UAAIE,SAAJ,EAAe;AACbE,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,OAFD,MAEO;AACLA,QAAAA,KAAK,CAAC,aAAD,CAAL;;AACA,cAAKC,QAAL,CAAc;AACZP,UAAAA,WAAW,+BAAMA,WAAN,IAAmBE,EAAnB;AADC,SAAd;AAGD;AAEF,K;;;;;;;AA1CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;mCACe,CAEd;;;mCAEc,CAEd;;;6BAqBQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKN,KAAL,CAAWF,OAAX,CAAmBc,GAAnB,CAAuB,UAAAC,MAAM;AAAA,eAC5B,oBAAC,UAAD;AACE,UAAA,EAAE,EAAEA,MAAM,CAACP,EADb;AAEE,UAAA,GAAG,EAAEO,MAAM,CAACP,EAFd;AAGE,UAAA,IAAI,EAAEO,MAAM,CAACC,IAHf;AAIE,UAAA,KAAK,EAAED,MAAM,CAACE,KAJhB;AAKE,UAAA,WAAW,EAAE,MAAI,CAACV,WALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CADH,CAHJ,EAcI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADF;AAkBD;;;;EA3Eeb,S;;AA8ElB,eAAeO,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport MemoryCard from \"./components/MemoryCard\";\nimport friends from \"./friends.json\";\n\n\nimport './App.css';\n\nclass App extends Component {\n  \n // Setting this.state.friends to the friends json array\n state = {\n    friends,\n    score: 0,\n    topScore: 0,\n    message: 'Click an image to begin!',\n    clickedList: []\n  };\n  \n  // 1) When card clicked check if unique id is in selectedCards \n  // - if in array then game over\n  //    - check if current score is greater than topScore\n  //         - if greater save score as current topScore\n  //    - display game over to screen\n  //    - startNewGame()\n  //       - reset score to zero\n  //       - shuffle cards - random array\n  //       - render to page\n  // 2) if not in array\n  //    - Check if wonGame()\n  //    - increase score counter by 1\n  //    - add id to selectedCards\n  //    - shuffle cards - random array\n  //    - render to page\n\n\n  // When card is clicked onClick=\"shuffleCards\" \n  shuffleCards() {\n\n  }\n\n  startNewGame() {\n\n  }\n\n  handleClick = (id) => {\n    const clickedList = this.state.selectedCards;\n    \n    // Can use indexOf()\n    // Returns true or false if included\n    const isClicked = clickedList.includes(id);\n\n    if (isClicked) {\n      alert('clicked already')\n    } else {\n      alert('Not clicked')\n      this.setState({\n        clickedList: [...clickedList, id ]\n      })\n    }\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n          <NavBar />\n          <Header />\n          <Main>\n            {this.state.friends.map(friend => (\n              <MemoryCard\n                id={friend.id}\n                key={friend.id}\n                name={friend.name}\n                image={friend.image}\n                handleClick={this.handleClick}\n              />\n            ))}\n          </Main>\n          <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}